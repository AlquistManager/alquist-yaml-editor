
    //array of nodes
    var nodes = new vis.DataSet([
{id: 100, label: 'smart_price_out3', level: 29},
{id: 58, label: 'senior_price_out4', level: 22},
{id: 37, label: 'simple_price_out2', level: 19},
{id: 72, label: 'smart_price_1', level: 18},
{id: 73, label: 'smart_price_2', level: 19},
{id: 99, label: 'smart_price_cond3', level: 28},
{id: 102, label: 'smart_price_out4', level: 30},
{id: 20, label: 'simple_price_cond1', level: 17},
{id: 67, label: 'error_smart_os', level: 18},
{id: 103, label: 'smart_check_price_from', level: 26},
{id: 94, label: 'smart_android_select_param', level: 40},
{id: 3, label: 'intro2', level: 3},
{id: 9, label: 'select_type_test', level: 9},
{id: 69, label: 'all_intro', level: 15},
{id: 61, label: 'senior_price_error', level: 20},
{id: 104, label: 'smart_check_price_to', level: 27},
{id: 32, label: 'smart_android_recommend_3', level: 29},
{id: 45, label: 'type_check_senior', level: 12},
{id: 46, label: 'senior_intro', level: 13},
{id: 56, label: 'senior_price_out3', level: 21},
{id: 39, label: 'simple_price_out3', level: 20},
{id: 89, label: 'smart_android_paramst3', level: 35},
{id: 43, label: 'simple_check_price_to', level: 18},
{id: 5, label: 'intro4', level: 5},
{id: 54, label: 'senior_price_out2', level: 20},
{id: 63, label: 'smart_intro', level: 14},
{id: 4, label: 'intro3', level: 4},
{id: 86, label: 'smart_android_select_brand', level: 32},
{id: 97, label: 'smart_price_cond2', level: 27},
{id: 31, label: 'smart_android_recommend_2', level: 28},
{id: 70, label: 'all_intro_2', level: 16},
{id: 18, label: 'simple_price_3', level: 15},
{id: 11, label: 'no_matches', level: 11},
{id: 51, label: 'senior_price_cond1', level: 18},
{id: 1, label: 'init', level: 1},
{id: 34, label: 'smart_android_recommend_out', level: 31},
{id: 23, label: 's_price_out_test_2', level: 20},
{id: 2, label: 'intro', level: 2},
{id: 40, label: 'simple_price_cond4', level: 20},
{id: 92, label: 'smart_android_params_2t3', level: 38},
{id: 10, label: 'select_type_test_2', level: 10},
{id: 78, label: 'smart_select_price', level: 24},
{id: 74, label: 'smart_price_3', level: 20},
{id: 71, label: 'all_intro_3', level: 17},
{id: 14, label: 'type_check_simple', level: 11},
{id: 87, label: 'smart_android_params', level: 33},
{id: 65, label: 'smart_select_os_buttons', level: 16},
{id: 22, label: 's_price_out_test', level: 19},
{id: 101, label: 'smart_price_cond4', level: 29},
{id: 42, label: 'simple_check_price_from', level: 17},
{id: 79, label: 'smart_check_price', level: 25},
{id: 27, label: 'simple_out', level: 24},
{id: 48, label: 'senior_select_price', level: 15},
{id: 50, label: 'senior_check_price', level: 17},
{id: 25, label: 'simple_params2', level: 22},
{id: 95, label: 'error_select_param', level: 41},
{id: 6, label: 'intro5', level: 6},
{id: 33, label: 'smart_android_recommend_cond_1', level: 30},
{id: 21, label: 'simple_price_out1', level: 18},
{id: 81, label: 'smart_price_out1', level: 27},
{id: 28, label: 'smart_android_recommend', level: 25},
{id: 52, label: 'senior_price_out1', level: 19},
{id: 41, label: 'simple_price_out4', level: 21},
{id: 64, label: 'smart_intro_2', level: 15},
{id: 44, label: 'simple_price_error', level: 19},
{id: 106, label: 'error_phone_type', level: 15},
{id: 38, label: 'simple_price_cond3', level: 19},
{id: 66, label: 'smart_select_os', level: 17},
{id: 35, label: 'end_buttons', level: 32},
{id: 47, label: 'senior_price', level: 14},
{id: 17, label: 'simple_select_price', level: 14},
{id: 82, label: 'smart_android_brand', level: 28},
{id: 7, label: 'select_type_button', level: 7},
{id: 15, label: 'simple_intro', level: 12},
{id: 80, label: 'smart_price_cond1', level: 26},
{id: 91, label: 'smart_android_params_2t2', level: 37},
{id: 68, label: 'type_check_all', level: 14},
{id: 49, label: 'senior_price_3', level: 16},
{id: 19, label: 'simple_check_price', level: 16},
{id: 53, label: 'senior_price_cond2', level: 19},
{id: 12, label: 'no_matches_2', level: 12},
{id: 98, label: 'smart_price_out2', level: 28},
{id: 29, label: 'smart_android_recommendt2', level: 26},
{id: 13, label: 'no_matches_3', level: 13},
{id: 16, label: 'simple_price', level: 13},
{id: 96, label: 'error_select_brand', level: 33},
{id: 59, label: 'senior_check_price_from', level: 18},
{id: 88, label: 'smart_android_paramst2', level: 34},
{id: 75, label: 'smart_price_4', level: 21},
{id: 84, label: 'smart_android_brandt3', level: 30},
{id: 24, label: 'simple_params', level: 21},
{id: 62, label: 'type_check_smart', level: 13},
{id: 57, label: 'senior_price_cond4', level: 21},
{id: 76, label: 'smart_price_5', level: 22},
{id: 26, label: 'simple_params_buttons', level: 23},
{id: 83, label: 'smart_android_brandt2', level: 29},
{id: 105, label: 'smart_price_error', level: 28},
{id: 90, label: 'smart_android_params_2', level: 36},
{id: 77, label: 'smart_price_6', level: 23},
{id: 60, label: 'senior_check_price_to', level: 19},
{id: 8, label: 'select_type', level: 8},
{id: 36, label: 'simple_price_cond2', level: 18},
{id: 93, label: 'smart_android_params_3_buttons', level: 39},
{id: 85, label: 'smart_android_select_brand_buttons', level: 31},
{id: 30, label: 'smart_android_recommendt3', level: 27},
{id: 55, label: 'senior_price_cond3', level: 20},
    ]);

    // create an array with edges
    var edges = new vis.DataSet([
{from: 1, to: 2, arrows: 'to'},
{from: 2, to: 3, arrows: 'to'},
{from: 3, to: 4, arrows: 'to'},
{from: 4, to: 5, arrows: 'to'},
{from: 5, to: 6, arrows: 'to'},
{from: 6, to: 7, arrows: 'to'},
{from: 7, to: 8, arrows: 'to'},
{from: 8, to: 9, arrows: 'to'},
{from: 9, to: 10, arrows: 'to'},
{from: 10, to: 11, arrows: 'to'},
{from: 11, to: 12, arrows: 'to'},
{from: 12, to: 13, arrows: 'to'},
{from: 10, to: 14, arrows: 'to'},
{from: 14, to: 15, arrows: 'to'},
{from: 15, to: 16, arrows: 'to'},
{from: 16, to: 17, arrows: 'to'},
{from: 17, to: 18, arrows: 'to'},
{from: 18, to: 19, arrows: 'to'},
{from: 19, to: 20, arrows: 'to'},
{from: 20, to: 21, arrows: 'to'},
{from: 21, to: 22, arrows: 'to'},
{from: 22, to: 23, arrows: 'to'},
{from: 23, to: 11, arrows: 'to'},
{from: 23, to: 24, arrows: 'to'},
{from: 24, to: 25, arrows: 'to'},
{from: 25, to: 26, arrows: 'to'},
{from: 26, to: 27, arrows: 'to'},
{from: 27, to: 28, arrows: 'to'},
{from: 28, to: 29, arrows: 'to'},
{from: 29, to: 11, arrows: 'to'},
{from: 29, to: 30, arrows: 'to'},
{from: 30, to: 31, arrows: 'to'},
{from: 31, to: 32, arrows: 'to'},
{from: 32, to: 33, arrows: 'to'},
{from: 33, to: 34, arrows: 'to'},
{from: 34, to: 35, arrows: 'to'},
{from: 33, to: 11, arrows: 'to'},
{from: 20, to: 36, arrows: 'to'},
{from: 36, to: 37, arrows: 'to'},
{from: 37, to: 22, arrows: 'to'},
{from: 36, to: 38, arrows: 'to'},
{from: 38, to: 39, arrows: 'to'},
{from: 39, to: 22, arrows: 'to'},
{from: 38, to: 40, arrows: 'to'},
{from: 40, to: 41, arrows: 'to'},
{from: 41, to: 22, arrows: 'to'},
{from: 40, to: 22, arrows: 'to'},
{from: 19, to: 42, arrows: 'to'},
{from: 42, to: 20, arrows: 'to'},
{from: 42, to: 43, arrows: 'to'},
{from: 43, to: 20, arrows: 'to'},
{from: 43, to: 44, arrows: 'to'},
{from: 44, to: 17, arrows: 'to'},
{from: 14, to: 45, arrows: 'to'},
{from: 45, to: 46, arrows: 'to'},
{from: 46, to: 47, arrows: 'to'},
{from: 47, to: 48, arrows: 'to'},
{from: 48, to: 49, arrows: 'to'},
{from: 49, to: 50, arrows: 'to'},
{from: 50, to: 51, arrows: 'to'},
{from: 51, to: 52, arrows: 'to'},
{from: 52, to: 22, arrows: 'to'},
{from: 51, to: 53, arrows: 'to'},
{from: 53, to: 54, arrows: 'to'},
{from: 54, to: 22, arrows: 'to'},
{from: 53, to: 55, arrows: 'to'},
{from: 55, to: 56, arrows: 'to'},
{from: 56, to: 22, arrows: 'to'},
{from: 55, to: 57, arrows: 'to'},
{from: 57, to: 58, arrows: 'to'},
{from: 58, to: 22, arrows: 'to'},
{from: 57, to: 22, arrows: 'to'},
{from: 50, to: 59, arrows: 'to'},
{from: 59, to: 51, arrows: 'to'},
{from: 59, to: 60, arrows: 'to'},
{from: 60, to: 51, arrows: 'to'},
{from: 60, to: 61, arrows: 'to'},
{from: 61, to: 48, arrows: 'to'},
{from: 45, to: 62, arrows: 'to'},
{from: 62, to: 63, arrows: 'to'},
{from: 63, to: 64, arrows: 'to'},
{from: 64, to: 65, arrows: 'to'},
{from: 65, to: 66, arrows: 'to'},
{from: 66, to: 67, arrows: 'to'},
{from: 67, to: 65, arrows: 'to'},
{from: 62, to: 68, arrows: 'to'},
{from: 68, to: 69, arrows: 'to'},
{from: 69, to: 70, arrows: 'to'},
{from: 70, to: 11, arrows: 'to'},
{from: 70, to: 71, arrows: 'to'},
{from: 71, to: 72, arrows: 'to'},
{from: 72, to: 73, arrows: 'to'},
{from: 73, to: 74, arrows: 'to'},
{from: 74, to: 75, arrows: 'to'},
{from: 75, to: 76, arrows: 'to'},
{from: 76, to: 77, arrows: 'to'},
{from: 77, to: 78, arrows: 'to'},
{from: 78, to: 79, arrows: 'to'},
{from: 79, to: 80, arrows: 'to'},
{from: 80, to: 81, arrows: 'to'},
{from: 81, to: 82, arrows: 'to'},
{from: 82, to: 83, arrows: 'to'},
{from: 83, to: 11, arrows: 'to'},
{from: 83, to: 84, arrows: 'to'},
{from: 84, to: 85, arrows: 'to'},
{from: 85, to: 86, arrows: 'to'},
{from: 86, to: 87, arrows: 'to'},
{from: 87, to: 88, arrows: 'to'},
{from: 88, to: 11, arrows: 'to'},
{from: 88, to: 89, arrows: 'to'},
{from: 89, to: 90, arrows: 'to'},
{from: 90, to: 91, arrows: 'to'},
{from: 91, to: 11, arrows: 'to'},
{from: 91, to: 92, arrows: 'to'},
{from: 92, to: 93, arrows: 'to'},
{from: 93, to: 94, arrows: 'to'},
{from: 94, to: 95, arrows: 'to'},
{from: 95, to: 93, arrows: 'to'},
{from: 86, to: 96, arrows: 'to'},
{from: 96, to: 85, arrows: 'to'},
{from: 80, to: 97, arrows: 'to'},
{from: 97, to: 98, arrows: 'to'},
{from: 98, to: 82, arrows: 'to'},
{from: 97, to: 99, arrows: 'to'},
{from: 99, to: 100, arrows: 'to'},
{from: 100, to: 82, arrows: 'to'},
{from: 99, to: 101, arrows: 'to'},
{from: 101, to: 102, arrows: 'to'},
{from: 102, to: 82, arrows: 'to'},
{from: 101, to: 82, arrows: 'to'},
{from: 79, to: 103, arrows: 'to'},
{from: 103, to: 80, arrows: 'to'},
{from: 103, to: 104, arrows: 'to'},
{from: 104, to: 80, arrows: 'to'},
{from: 104, to: 105, arrows: 'to'},
{from: 105, to: 78, arrows: 'to'},
{from: 68, to: 106, arrows: 'to'},
{from: 106, to: 7, arrows: 'to'},
    ]);

    // create a network
    var container = document.getElementById('mynetwork');

    // provide the data in the vis format
    var data = {
        nodes: nodes,
        edges: edges
    };
    var options = {
        edges: {
            smooth: {
                enabled: true,
                type: "dynamic",
                roundness: 0.5,
            },
        },
        layout: {
            randomSeed: undefined,
            improvedLayout:true,
            hierarchical: {
            enabled:true,
            direction: 'UD',        // UD, DU, LR, RL
            sortMethod: 'directed'   // hubsize, directed
            }
        },
        physics: {
            hierarchicalRepulsion: {
            centralGravity: 0.0,
            springLength: 100,
            springConstant: 0.01,
            nodeDistance: 170,
            damping: 0.09
        },}
    };

    // initialize your network!
    var network = new vis.Network(container, data, options);